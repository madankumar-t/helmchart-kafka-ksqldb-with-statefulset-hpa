apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: kafka
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{- toYaml .Values.imagePullSecrets | nindent 8 }}
{{- end }}
      containers:
        - name: kafka
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: internal
              containerPort: {{ .Values.service.headless.portInternal }}
            - name: client
              containerPort: {{ .Values.service.headless.portClient }}
            - name: controller
              containerPort: {{ .Values.service.headless.portController }}
          env:
{{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
{{- end }}
{{- range $k, $v := .Values.extraEnv }}
            - name: {{ $k }}
              value: {{ $v | quote }}
{{- end }}
          envFrom:
{{- if .Values.envFrom }}
{{ toYaml .Values.envFrom | nindent 12 }}
{{- else }}
            []
{{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka/data
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.headless.portClient }}
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.headless.portClient }}
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
{{- toYaml .Values.resources | nindent 12 }}
{{- if not .Values.persistence.enabled }}
      volumes:
        - name: data
          emptyDir: {}
{{- end }}
      nodeSelector:
{{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
{{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
{{- toYaml .Values.affinity | nindent 8 }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: {{ toYaml .Values.persistence.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
{{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
{{- end }}
{{- end }}
