apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  labels:
    app: schema-registry
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
        - name: schema-registry
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          {{- if .Values.command }}
          command: {{ toYaml .Values.command | nindent 10 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{ toYaml .Values.args | nindent 10 }}
          {{- end }}
          {{- $env := .Values.env -}}
          {{- $xenv := .Values.extraEnv -}}
          {{- if or (gt (len $env) 0) (gt (len $xenv) 0) }}
          env:
            {{- range $k, $v := $env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
            {{- range $k, $v := $xenv }}
            {{- if $v }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
            {{- end }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /subjects
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /subjects
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
